;
; File generated by cc65 v 2.18 - Ubuntu 2.18-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "mousedemo.c", 7406, 1615619520
	.dbg		file, "/usr/share/cc65/include/stdbool.h", 2506, 1573331006
	.dbg		file, "/usr/share/cc65/include/stdlib.h", 5748, 1573331006
	.dbg		file, "/usr/share/cc65/include/string.h", 5104, 1573331006
	.dbg		file, "/usr/share/cc65/include/stddef.h", 3057, 1573331006
	.dbg		file, "/usr/share/cc65/include/mouse.h", 8806, 1573331006
	.dbg		file, "/usr/share/cc65/include/pen.h", 3700, 1573331006
	.dbg		file, "/usr/share/cc65/include/conio.h", 8941, 1573331006
	.dbg		file, "/usr/share/cc65/include/stdarg.h", 2913, 1573331006
	.dbg		file, "/usr/share/cc65/include/target.h", 2992, 1573331006
	.dbg		file, "/usr/share/cc65/include/atari.h", 21597, 1573331006
	.dbg		file, "/usr/share/cc65/include/_atarios.h", 41120, 1573331006
	.dbg		file, "/usr/share/cc65/include/_gtia.h", 13839, 1573331006
	.dbg		file, "/usr/share/cc65/include/_pbi.h", 3143, 1573331006
	.dbg		file, "/usr/share/cc65/include/_pokey.h", 11387, 1573331006
	.dbg		file, "/usr/share/cc65/include/_pia.h", 3044, 1573331006
	.dbg		file, "/usr/share/cc65/include/_antic.h", 11828, 1573331006
	.dbg		file, "/usr/share/cc65/include/ctype.h", 8462, 1573331006
	.dbg		file, "/usr/share/cc65/include/dbg.h", 5775, 1573331006
	.dbg		file, "/usr/share/cc65/include/cc65.h", 5141, 1573331006
	.forceimport	__STARTUP__
	.forceimport	initmainargs
	.dbg		sym, "exit", "00", extern, "_exit"
	.dbg		sym, "mouse_def_callbacks", "00", extern, "_mouse_def_callbacks"
	.dbg		sym, "mouse_stddrv", "00", extern, "_mouse_stddrv"
	.dbg		sym, "mouse_load_driver", "00", extern, "_mouse_load_driver"
	.dbg		sym, "mouse_unload", "00", extern, "_mouse_unload"
	.dbg		sym, "mouse_geterrormsg", "00", extern, "_mouse_geterrormsg"
	.dbg		sym, "mouse_hide", "00", extern, "_mouse_hide"
	.dbg		sym, "mouse_show", "00", extern, "_mouse_show"
	.dbg		sym, "mouse_setbox", "00", extern, "_mouse_setbox"
	.dbg		sym, "mouse_getbox", "00", extern, "_mouse_getbox"
	.dbg		sym, "mouse_info", "00", extern, "_mouse_info"
	.dbg		sym, "clrscr", "00", extern, "_clrscr"
	.dbg		sym, "kbhit", "00", extern, "_kbhit"
	.dbg		sym, "gotoxy", "00", extern, "_gotoxy"
	.dbg		sym, "cputs", "00", extern, "_cputs"
	.dbg		sym, "cputsxy", "00", extern, "_cputsxy"
	.dbg		sym, "cprintf", "00", extern, "_cprintf"
	.dbg		sym, "cgetc", "00", extern, "_cgetc"
	.dbg		sym, "cursor", "00", extern, "_cursor"
	.dbg		sym, "bgcolor", "00", extern, "_bgcolor"
	.dbg		sym, "bordercolor", "00", extern, "_bordercolor"
	.dbg		sym, "cclearxy", "00", extern, "_cclearxy"
	.dbg		sym, "screensize", "00", extern, "_screensize"
	.dbg		sym, "tolower", "00", extern, "_tolower"
	.dbg		sym, "DbgInit", "00", extern, "_DbgInit"
	.dbg		sym, "doesclrscrafterexit", "00", extern, "_doesclrscrafterexit"
	.import		_exit
	.import		_mouse_def_callbacks
	.import		_mouse_stddrv
	.import		_mouse_load_driver
	.import		_mouse_unload
	.import		_mouse_geterrormsg
	.import		_mouse_hide
	.import		_mouse_show
	.import		_mouse_setbox
	.import		_mouse_getbox
	.import		_mouse_info
	.import		_clrscr
	.import		_kbhit
	.import		_gotoxy
	.import		_cputs
	.import		_cputsxy
	.import		_cprintf
	.import		_cgetc
	.import		_cursor
	.import		_bgcolor
	.import		_bordercolor
	.import		_cclearxy
	.import		_screensize
	.import		_tolower
	.import		_DbgInit
	.import		_doesclrscrafterexit
	.export		_main

.segment	"RODATA"

L0032:
	.byte	$57,$61,$72,$6E,$69,$6E,$67,$3A,$20,$54,$68,$69,$73,$20,$70,$72
	.byte	$6F,$67,$72,$61,$6D,$20,$6E,$65,$65,$64,$73,$0D,$9B,$74,$68,$65
	.byte	$20,$64,$72,$69,$76,$65,$72,$20,$77,$69,$74,$68,$20,$74,$68,$65
	.byte	$20,$6E,$61,$6D,$65,$0D,$9B,$20,$20,$20,$20,$25,$73,$0D,$9B,$6F
	.byte	$6E,$20,$61,$20,$64,$69,$73,$6B,$21,$20,$50,$72,$65,$73,$73,$20
	.byte	$27,$79,$27,$20,$69,$66,$20,$79,$6F,$75,$20,$68,$61,$76,$65,$20
	.byte	$69,$74,$3B,$0D,$9B,$6F,$72,$2C,$20,$61,$6E,$79,$20,$6F,$74,$68
	.byte	$65,$72,$20,$6B,$65,$79,$20,$74,$6F,$20,$65,$78,$69,$74,$2E,$0D
	.byte	$9B,$00
L0090:
	.byte	$20,$64,$29,$65,$62,$75,$67,$20,$20,$68,$29,$69,$64,$65,$20,$20
	.byte	$20,$71,$29,$75,$69,$74,$20,$20,$20,$73,$29,$68,$6F,$77,$20,$20
	.byte	$20,$6A,$29,$61,$69,$6C,$00
L003C:
	.byte	$4F,$4B,$2E,$20,$50,$6C,$65,$61,$73,$65,$20,$77,$61,$69,$74,$20
	.byte	$70,$61,$74,$69,$65,$6E,$74,$6C,$79,$2E,$2E,$2E,$0D,$9B,$00
L014C:
	.byte	$53,$70,$75,$72,$69,$6F,$75,$73,$20,$63,$68,$61,$72,$61,$63,$74
	.byte	$65,$72,$3A,$20,$24,$25,$30,$32,$58,$00
L0047:
	.byte	$50,$6F,$69,$6E,$74,$65,$72,$20,$69,$73,$20,$25,$73,$76,$69,$73
	.byte	$69,$62,$6C,$65,$25,$73,$2E,$00
L007F:
	.byte	$6D,$6F,$75,$73,$65,$5F,$6C,$6F,$61,$64,$5F,$64,$72,$69,$76,$65
	.byte	$72,$00
L0098:
	.byte	$25,$33,$75,$2C,$25,$33,$75,$0D,$9B,$25,$2A,$73,$2B,$00
L0025:
	.byte	$9B,$25,$73,$3A,$20,$25,$73,$28,$25,$75,$29,$0D,$9B,$00
L0151:
	.byte	$6D,$6F,$75,$73,$65,$5F,$75,$6E,$6C,$6F,$61,$64,$00
L0051:
	.byte	$20,$61,$6E,$64,$20,$6A,$61,$69,$6C,$65,$64,$00
L00B2:
	.byte	$20,$59,$20,$20,$3D,$20,$25,$33,$64,$0D,$9B,$00
L00AE:
	.byte	$20,$58,$20,$20,$3D,$20,$25,$33,$64,$0D,$9B,$00
L00B6:
	.byte	$20,$42,$31,$20,$3D,$20,$25,$63,$0D,$9B,$00
L00BF:
	.byte	$20,$42,$32,$20,$3D,$20,$25,$63,$00
L0157:
	.byte	$47,$6F,$6F,$64,$62,$79,$65,$21,$00
L004A:
	.byte	$69,$6E,$00
L004D	:=	L0032+129
L009F	:=	L0032+129
L0054	:=	L0032+129

.segment	"BSS"

_mouse_name:
	.res	2,$00

; ---------------------------------------------------------------
; void __near__ __fastcall__ CheckError (__near__ const unsigned char *, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CheckError: near

	.dbg	func, "CheckError", "00", static, "_CheckError"
	.dbg	sym, "S", "00", auto, 1
	.dbg	sym, "Error", "00", auto, 0

.segment	"CODE"

;
; {
;
	.dbg	line, "mousedemo.c", 54
	jsr     pusha
;
; if (Error != MOUSE_ERR_OK) {
;
	.dbg	line, "mousedemo.c", 55
	ldy     #$00
	lda     (sp),y
	beq     L0022
;
; cprintf ("\n%s: %s(%u)\r\n", S, mouse_geterrormsg (Error), Error);
;
	.dbg	line, "mousedemo.c", 56
	lda     #<(L0025)
	ldx     #>(L0025)
	jsr     pushax
	ldy     #$06
	jsr     pushwysp
	ldy     #$04
	lda     (sp),y
	jsr     _mouse_geterrormsg
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	jsr     pusha0
	ldy     #$08
	jsr     _cprintf
;
; if (doesclrscrafterexit ()) {
;
	.dbg	line, "mousedemo.c", 61
	jsr     _doesclrscrafterexit
	tax
	beq     L015B
;
; cgetc ();
;
	.dbg	line, "mousedemo.c", 62
	jsr     _cgetc
;
; exit (EXIT_FAILURE);
;
	.dbg	line, "mousedemo.c", 64
	ldx     #$00
L015B:	lda     #$01
	jsr     _exit
;
; }
;
	.dbg	line, "mousedemo.c", 66
L0022:	jmp     incsp3
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ DoWarning (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DoWarning: near

	.dbg	func, "DoWarning", "00", static, "_DoWarning"

.segment	"CODE"

;
; "or, any other key to exit.\r\n", mouse_stddrv);
;
	.dbg	line, "mousedemo.c", 84
	lda     #<(L0032)
	ldx     #>(L0032)
	jsr     pushax
	lda     #<(_mouse_stddrv)
	ldx     #>(_mouse_stddrv)
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
;
; if (tolower (cgetc ()) != 'y') {
;
	.dbg	line, "mousedemo.c", 85
	jsr     _cgetc
	ldx     #$00
	jsr     _tolower
	cpx     #$00
	bne     L015C
	cmp     #$79
	beq     L0035
;
; exit (EXIT_SUCCESS);
;
	.dbg	line, "mousedemo.c", 86
L015C:	ldx     #$00
	txa
	jsr     _exit
;
; cprintf ("OK. Please wait patiently...\r\n");
;
	.dbg	line, "mousedemo.c", 88
L0035:	lda     #<(L003C)
	ldx     #>(L003C)
	jsr     pushax
	ldy     #$02
	jmp     _cprintf
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ ShowState (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ShowState: near

	.dbg	func, "ShowState", "00", static, "_ShowState"
	.dbg	sym, "Jailed", "00", auto, 1
	.dbg	sym, "Invisible", "00", auto, 0

.segment	"CODE"

;
; {
;
	.dbg	line, "mousedemo.c", 96
	jsr     pusha
;
; cclearxy (0, 7, 32);
;
	.dbg	line, "mousedemo.c", 97
	jsr     decsp2
	lda     #$00
	ldy     #$01
	sta     (sp),y
	lda     #$07
	dey
	sta     (sp),y
	lda     #$20
	jsr     _cclearxy
;
; gotoxy (0, 7);
;
	.dbg	line, "mousedemo.c", 98
	lda     #$00
	jsr     pusha
	lda     #$07
	jsr     _gotoxy
;
; cprintf ("Pointer is %svisible%s.", Invisible? "in" : "", Jailed? " and jailed" : "");
;
	.dbg	line, "mousedemo.c", 99
	lda     #<(L0047)
	ldx     #>(L0047)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	beq     L004B
	lda     #<(L004A)
	ldx     #>(L004A)
	jmp     L004E
L004B:	lda     #<(L004D)
	ldx     #>(L004D)
L004E:	jsr     pushax
	ldy     #$05
	lda     (sp),y
	beq     L0052
	lda     #<(L0051)
	ldx     #>(L0051)
	jmp     L0055
L0052:	lda     #<(L0054)
	ldx     #>(L0054)
L0055:	jsr     pushax
	ldy     #$06
	jsr     _cprintf
;
; }
;
	.dbg	line, "mousedemo.c", 100
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ __cdecl__ main (int, __near__ unsigned char * *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"
	.dbg	sym, "argc", "00", auto, 2
	.dbg	sym, "argv", "00", auto, 0
	.dbg	sym, "info", "00", auto, -5
	.dbg	sym, "full_box", "00", auto, -13
	.dbg	sym, "small_box", "00", auto, -21
	.dbg	sym, "width", "00", auto, -22
	.dbg	sym, "height", "00", auto, -23
	.dbg	sym, "C", "00", auto, -24
	.dbg	sym, "Invisible", "00", auto, -25
	.dbg	sym, "Done", "00", auto, -26
	.dbg	sym, "Jailed", "00", auto, -27

.segment	"CODE"

;
; bool Invisible = true, Done = false, Jailed = false;
;
	.dbg	line, "mousedemo.c", 114
	ldy     #$18
	jsr     subysp
	lda     #$01
	jsr     pusha
	lda     #$00
	jsr     pusha
	jsr     pusha
;
; DbgInit (0);
;
	.dbg	line, "mousedemo.c", 117
	tax
	jsr     _DbgInit
;
; (void) bordercolor (COLOR_BLUE);
;
	.dbg	line, "mousedemo.c", 125
	lda     #$74
	jsr     _bordercolor
;
; (void) bgcolor (COLOR_WHITE);
;
	.dbg	line, "mousedemo.c", 126
	lda     #$0E
	jsr     _bgcolor
;
; cursor (0);
;
	.dbg	line, "mousedemo.c", 129
	lda     #$00
	jsr     _cursor
;
; clrscr ();
;
	.dbg	line, "mousedemo.c", 130
	jsr     _clrscr
;
; if (argc > 1) {
;
	.dbg	line, "mousedemo.c", 145
	ldy     #$1E
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$02
	txa
	sbc     #$00
	bvs     L0076
	eor     #$80
L0076:	bpl     L0074
;
; mouse_name = argv[1];
;
	.dbg	line, "mousedemo.c", 146
	dey
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (ptr1),y
	sta     _mouse_name+1
	dey
	lda     (ptr1),y
;
; } else {
;
	.dbg	line, "mousedemo.c", 147
	jmp     L0166
;
; DoWarning ();
;
	.dbg	line, "mousedemo.c", 149
L0074:	jsr     _DoWarning
;
; mouse_name = mouse_stddrv;
;
	.dbg	line, "mousedemo.c", 150
	lda     #>(_mouse_stddrv)
	sta     _mouse_name+1
	lda     #<(_mouse_stddrv)
L0166:	sta     _mouse_name
;
; CheckError ("mouse_load_driver",
;
	.dbg	line, "mousedemo.c", 154
	lda     #<(L007F)
	ldx     #>(L007F)
	jsr     pushax
;
; mouse_load_driver (&mouse_def_callbacks, mouse_name));
;
	.dbg	line, "mousedemo.c", 155
	lda     #<(_mouse_def_callbacks)
	ldx     #>(_mouse_def_callbacks)
	jsr     pushax
	lda     _mouse_name
	ldx     _mouse_name+1
	jsr     _mouse_load_driver
	jsr     _CheckError
;
; mouse_getbox (&full_box);
;
	.dbg	line, "mousedemo.c", 169
	lda     sp
	ldx     sp+1
	clc
	adc     #$0E
	bcc     L0086
	inx
L0086:	jsr     _mouse_getbox
;
; screensize (&width, &height);
;
	.dbg	line, "mousedemo.c", 171
	lda     sp
	ldx     sp+1
	clc
	adc     #$05
	bcc     L0089
	inx
L0089:	jsr     pushax
	lda     sp
	ldx     sp+1
	clc
	adc     #$06
	bcc     L008B
	inx
L008B:	jsr     _screensize
;
; clrscr ();
;
	.dbg	line, "mousedemo.c", 174
L008C:	jsr     _clrscr
;
; cputs (" d)ebug  h)ide   q)uit   s)how   j)ail");
;
	.dbg	line, "mousedemo.c", 177
	lda     #<(L0090)
	ldx     #>(L0090)
	jsr     _cputs
;
; gotoxy (width / 2 - 3, height / 2 - 1);
;
	.dbg	line, "mousedemo.c", 180
	ldy     #$05
	lda     (sp),y
	lsr     a
	sec
	sbc     #$03
	jsr     pusha
	ldy     #$05
	lda     (sp),y
	lsr     a
	sec
	sbc     #$01
	jsr     _gotoxy
;
; cprintf ("%3u,%3u\r\n%*s+", width / 2 * 8 + 4, height / 2 * 8 + 4,
;
	.dbg	line, "mousedemo.c", 185
	lda     #<(L0098)
	ldx     #>(L0098)
	jsr     pushax
	ldy     #$07
	ldx     #$00
	lda     (sp),y
	lsr     a
	stx     tmp1
	asl     a
	rol     tmp1
	asl     a
	rol     tmp1
	asl     a
	rol     tmp1
	ldx     tmp1
	clc
	adc     #$04
	bcc     L009B
	inx
L009B:	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	lsr     a
	stx     tmp1
	asl     a
	rol     tmp1
	asl     a
	rol     tmp1
	asl     a
	rol     tmp1
	ldx     tmp1
	clc
	adc     #$04
	bcc     L009D
	inx
L009D:	jsr     pushax
;
; width / 2, "");
;
	.dbg	line, "mousedemo.c", 186
	ldy     #$0B
	lda     (sp),y
	lsr     a
	jsr     pusha0
	lda     #<(L009F)
	ldx     #>(L009F)
	jsr     pushax
	ldy     #$0A
	jsr     _cprintf
;
; ShowState (Jailed, Invisible);
;
	.dbg	line, "mousedemo.c", 190
	ldy     #$00
	lda     (sp),y
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	jsr     _ShowState
;
; mouse_info (&info);
;
	.dbg	line, "mousedemo.c", 193
L00A4:	lda     sp
	ldx     sp+1
	clc
	adc     #$16
	bcc     L00A9
	inx
L00A9:	jsr     _mouse_info
;
; gotoxy (0, 2);
;
	.dbg	line, "mousedemo.c", 194
	lda     #$00
	jsr     pusha
	lda     #$02
	jsr     _gotoxy
;
; cprintf (" X  = %3d\r\n", info.pos.x);
;
	.dbg	line, "mousedemo.c", 195
	lda     #<(L00AE)
	ldx     #>(L00AE)
	jsr     pushax
	ldy     #$1B
	jsr     pushwysp
	ldy     #$04
	jsr     _cprintf
;
; cprintf (" Y  = %3d\r\n", info.pos.y);
;
	.dbg	line, "mousedemo.c", 196
	lda     #<(L00B2)
	ldx     #>(L00B2)
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$04
	jsr     _cprintf
;
; cprintf (" B1 = %c\r\n", (info.buttons & MOUSE_BTN_LEFT) ?
;
	.dbg	line, "mousedemo.c", 197
	lda     #<(L00B6)
	ldx     #>(L00B6)
	jsr     pushax
	ldy     #$1C
	lda     (sp),y
	and     #$10
;
; 'v'
;
	.dbg	line, "mousedemo.c", 201
	beq     L0160
;
; : '^');
;
	.dbg	line, "mousedemo.c", 203
	lda     #$76
	jmp     L00BC
L0160:	lda     #$5E
L00BC:	jsr     pusha0
	ldy     #$04
	jsr     _cprintf
;
; cprintf (" B2 = %c", (info.buttons & MOUSE_BTN_RIGHT) ?
;
	.dbg	line, "mousedemo.c", 204
	lda     #<(L00BF)
	ldx     #>(L00BF)
	jsr     pushax
	ldy     #$1C
	lda     (sp),y
	and     #$01
;
; 'v'
;
	.dbg	line, "mousedemo.c", 208
	beq     L0161
;
; : '^');
;
	.dbg	line, "mousedemo.c", 210
	lda     #$76
	jmp     L00C5
L0161:	lda     #$5E
L00C5:	jsr     pusha0
	ldy     #$04
	jsr     _cprintf
;
; if (kbhit ()) {
;
	.dbg	line, "mousedemo.c", 213
	jsr     _kbhit
	tax
	jeq     L00D1
;
; cclearxy (1, 9, 23);
;
	.dbg	line, "mousedemo.c", 214
	jsr     decsp2
	lda     #$01
	tay
	sta     (sp),y
	lda     #$09
	dey
	sta     (sp),y
	lda     #$17
	jsr     _cclearxy
;
; switch (tolower (C = cgetc ())) {
;
	.dbg	line, "mousedemo.c", 215
	jsr     _cgetc
	ldy     #$03
	sta     (sp),y
	ldx     #$00
	jsr     _tolower
;
; }
;
	.dbg	line, "mousedemo.c", 269
	cpx     #$00
	jne     L0147
	cmp     #$64
	beq     L00D3
	cmp     #$68
	beq     L00EC
	cmp     #$6A
	beq     L00F2
	cmp     #$71
	jeq     L0164
	cmp     #$73
	jeq     L013C
	jmp     L0147
;
; BREAK();
;
	.dbg	line, "mousedemo.c", 217
L00D3:	brk
;
; (void) bordercolor (COLOR_BLUE);
;
	.dbg	line, "mousedemo.c", 227
	lda     #$74
	jsr     _bordercolor
;
; (void) bgcolor (COLOR_WHITE);
;
	.dbg	line, "mousedemo.c", 228
	lda     #$0E
	jsr     _bgcolor
;
; goto top;
;
	.dbg	line, "mousedemo.c", 233
	jmp     L008C
;
; mouse_hide ();
;
	.dbg	line, "mousedemo.c", 236
L00EC:	jsr     _mouse_hide
;
; ShowState (Jailed, ++Invisible);
;
	.dbg	line, "mousedemo.c", 237
	ldy     #$00
	lda     (sp),y
	jsr     pusha
	ldy     #$03
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	jsr     _ShowState
;
; break;
;
	.dbg	line, "mousedemo.c", 238
	jmp     L00D1
;
; if (Jailed) {
;
	.dbg	line, "mousedemo.c", 241
L00F2:	lda     (sp,x)
	beq     L00F3
;
; mouse_setbox (&full_box);
;
	.dbg	line, "mousedemo.c", 242
	lda     sp
	ldx     sp+1
	clc
	adc     #$0E
	bcc     L00F7
	inx
L00F7:	jsr     _mouse_setbox
;
; Jailed = false;
;
	.dbg	line, "mousedemo.c", 243
	lda     #$00
;
; } else {
;
	.dbg	line, "mousedemo.c", 244
	jmp     L0167
;
; small_box.minx = max (info.pos.x - 10, full_box.minx);
;
	.dbg	line, "mousedemo.c", 245
L00F3:	ldy     #$17
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #$0A
	bcs     L0100
	dex
L0100:	jsr     pushax
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosicmp
	bmi     L0102
	beq     L0102
	ldy     #$17
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #$0A
	bcs     L0106
	dex
	jmp     L0106
L0102:	ldy     #$0F
	lda     (sp),y
	tax
	dey
	lda     (sp),y
L0106:	ldy     #$06
	jsr     staxysp
;
; small_box.miny = max (info.pos.y - 10, full_box.miny);
;
	.dbg	line, "mousedemo.c", 246
	ldy     #$19
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #$0A
	bcs     L010E
	dex
L010E:	jsr     pushax
	ldy     #$13
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosicmp
	bmi     L0110
	beq     L0110
	ldy     #$19
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #$0A
	bcs     L0114
	dex
	jmp     L0114
L0110:	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
L0114:	ldy     #$08
	jsr     staxysp
;
; small_box.maxx = min (info.pos.x + 10, full_box.maxx);
;
	.dbg	line, "mousedemo.c", 247
	ldy     #$17
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$0A
	bcc     L011C
	inx
L011C:	ldy     #$12
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bvc     L015D
	eor     #$80
L015D:	bpl     L0162
	ldy     #$17
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$0A
	bcc     L0122
	inx
	jmp     L0122
L0162:	lda     (sp),y
	tax
	dey
	lda     (sp),y
L0122:	ldy     #$0A
	jsr     staxysp
;
; small_box.maxy = min (info.pos.y + 10, full_box.maxy);
;
	.dbg	line, "mousedemo.c", 248
	ldy     #$19
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$0A
	bcc     L012A
	inx
L012A:	ldy     #$14
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bvc     L015E
	eor     #$80
L015E:	bpl     L0163
	ldy     #$19
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$0A
	bcc     L0130
	inx
	jmp     L0130
L0163:	lda     (sp),y
	tax
	dey
	lda     (sp),y
L0130:	ldy     #$0C
	jsr     staxysp
;
; mouse_setbox (&small_box);
;
	.dbg	line, "mousedemo.c", 249
	lda     sp
	ldx     sp+1
	clc
	adc     #$06
	bcc     L0135
	inx
L0135:	jsr     _mouse_setbox
;
; Jailed = true;
;
	.dbg	line, "mousedemo.c", 250
	lda     #$01
L0167:	ldy     #$00
	sta     (sp),y
;
; ShowState (Jailed, Invisible);
;
	.dbg	line, "mousedemo.c", 252
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	jsr     _ShowState
;
; break;
;
	.dbg	line, "mousedemo.c", 253
	jmp     L00D1
;
; mouse_show ();
;
	.dbg	line, "mousedemo.c", 256
L013C:	jsr     _mouse_show
;
; if (Invisible) {
;
	.dbg	line, "mousedemo.c", 257
	ldy     #$02
	lda     (sp),y
	beq     L00D1
;
; ShowState (Jailed, --Invisible);
;
	.dbg	line, "mousedemo.c", 258
	ldy     #$00
	lda     (sp),y
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	sec
	sbc     #$01
	sta     (sp),y
	jsr     _ShowState
;
; break;
;
	.dbg	line, "mousedemo.c", 260
	jmp     L00D1
;
; Done = true;
;
	.dbg	line, "mousedemo.c", 263
L0164:	lda     #$01
	tay
	sta     (sp),y
;
; break;
;
	.dbg	line, "mousedemo.c", 264
	jmp     L0165
;
; gotoxy (1, 9);
;
	.dbg	line, "mousedemo.c", 267
L0147:	lda     #$01
	jsr     pusha
	lda     #$09
	jsr     _gotoxy
;
; cprintf ("Spurious character: $%02X", C);
;
	.dbg	line, "mousedemo.c", 268
	lda     #<(L014C)
	ldx     #>(L014C)
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _cprintf
;
; } while (!Done);
;
	.dbg	line, "mousedemo.c", 271
L00D1:	ldy     #$01
L0165:	lda     (sp),y
	jeq     L00A4
;
; CheckError ("mouse_unload", mouse_unload ());
;
	.dbg	line, "mousedemo.c", 275
	lda     #<(L0151)
	ldx     #>(L0151)
	jsr     pushax
	jsr     _mouse_unload
	jsr     _CheckError
;
; cputsxy (0, height / 2 + 3, "Goodbye!");
;
	.dbg	line, "mousedemo.c", 282
	jsr     decsp2
	lda     #$00
	ldy     #$01
	sta     (sp),y
	ldy     #$06
	lda     (sp),y
	lsr     a
	clc
	adc     #$03
	ldy     #$00
	sta     (sp),y
	lda     #<(L0157)
	ldx     #>(L0157)
	jsr     _cputsxy
;
; return EXIT_SUCCESS;
;
	.dbg	line, "mousedemo.c", 283
	ldx     #$00
	txa
;
; }
;
	.dbg	line, "mousedemo.c", 284
	ldy     #$1F
	jmp     addysp
	.dbg	line

.endproc

