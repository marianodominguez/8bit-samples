;
; File generated by cc65 v 2.18 - Ubuntu 2.18-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "gunzip65.c", 6831, 1615619520
	.dbg		file, "/usr/share/cc65/include/stdio.h", 6189, 1573331006
	.dbg		file, "/usr/share/cc65/include/stddef.h", 3057, 1573331006
	.dbg		file, "/usr/share/cc65/include/stdarg.h", 2913, 1573331006
	.dbg		file, "/usr/share/cc65/include/string.h", 5104, 1573331006
	.dbg		file, "/usr/share/cc65/include/zlib.h", 6954, 1573331006
	.dbg		file, "/usr/share/cc65/include/stdlib.h", 5748, 1573331006
	.dbg		file, "/usr/share/cc65/include/cc65.h", 5141, 1573331006
	.forceimport	__STARTUP__
	.dbg		sym, "stdin", "00", extern, "_stdin"
	.dbg		sym, "fclose", "00", extern, "_fclose"
	.dbg		sym, "fgets", "00", extern, "_fgets"
	.dbg		sym, "fopen", "00", extern, "_fopen"
	.dbg		sym, "fread", "00", extern, "_fread"
	.dbg		sym, "fwrite", "00", extern, "_fwrite"
	.dbg		sym, "getchar", "00", extern, "_getchar"
	.dbg		sym, "puts", "00", extern, "_puts"
	.dbg		sym, "strlen", "00", extern, "_strlen"
	.dbg		sym, "memmove", "00", extern, "_memmove"
	.dbg		sym, "inflatemem", "00", extern, "_inflatemem"
	.dbg		sym, "crc32", "00", extern, "_crc32"
	.dbg		sym, "atexit", "00", extern, "_atexit"
	.dbg		sym, "doesclrscrafterexit", "00", extern, "_doesclrscrafterexit"
	.import		_stdin
	.import		_fclose
	.import		_fgets
	.import		_fopen
	.import		_fread
	.import		_fwrite
	.import		_getchar
	.import		_puts
	.import		_strlen
	.import		_memmove
	.import		_inflatemem
	.import		_crc32
	.import		_atexit
	.import		_doesclrscrafterexit
	.export		_uncompress_buffer
	.export		_get_fname
	.export		_main

.segment	"RODATA"

L0078:
	.byte	$55,$6E,$63,$6F,$6D,$70,$72,$65,$73,$73,$65,$64,$20,$73,$69,$7A
	.byte	$65,$20,$64,$6F,$65,$73,$20,$6E,$6F,$74,$20,$6D,$61,$74,$63,$68
	.byte	$00
L00E3:
	.byte	$45,$72,$72,$6F,$72,$20,$77,$68,$69,$6C,$65,$20,$77,$72,$69,$74
	.byte	$69,$6E,$67,$20,$6F,$75,$74,$70,$75,$74,$20,$66,$69,$6C,$65,$00
L0010:
	.byte	$55,$6E,$73,$75,$70,$70,$6F,$72,$74,$65,$64,$20,$63,$6F,$6D,$70
	.byte	$72,$65,$73,$73,$69,$6F,$6E,$20,$6D,$65,$74,$68,$6F,$64,$00
L003F:
	.byte	$55,$6E,$63,$6F,$6D,$70,$72,$65,$73,$73,$65,$64,$20,$73,$69,$7A
	.byte	$65,$20,$74,$6F,$6F,$20,$62,$69,$67,$00
L00D9:
	.byte	$43,$61,$6E,$27,$74,$20,$63,$72,$65,$61,$74,$65,$20,$6F,$75,$74
	.byte	$70,$75,$74,$20,$66,$69,$6C,$65,$00
L00CF:
	.byte	$55,$6E,$63,$6F,$6D,$70,$72,$65,$73,$73,$65,$64,$20,$66,$69,$6C
	.byte	$65,$20,$6E,$61,$6D,$65,$3A,$00
L00B3:
	.byte	$43,$61,$6E,$27,$74,$20,$6F,$70,$65,$6E,$20,$47,$5A,$49,$50,$20
	.byte	$66,$69,$6C,$65,$00
L007C:
	.byte	$43,$61,$6C,$63,$75,$6C,$61,$74,$69,$6E,$67,$20,$43,$52,$43,$2E
	.byte	$2E,$2E,$00
L00C4:
	.byte	$46,$69,$6C,$65,$20,$69,$73,$20,$74,$6F,$6F,$20,$6C,$6F,$6E,$67
	.byte	$00
L00A9:
	.byte	$47,$5A,$49,$50,$20,$66,$69,$6C,$65,$20,$6E,$61,$6D,$65,$3A,$00
L0009:
	.byte	$4E,$6F,$74,$20,$47,$5A,$49,$50,$20,$66,$6F,$72,$6D,$61,$74,$00
L006F:
	.byte	$49,$6E,$66,$6C,$61,$74,$69,$6E,$67,$2E,$2E,$2E,$00
L0087:
	.byte	$43,$52,$43,$20,$6D,$69,$73,$6D,$61,$74,$63,$68,$00
L00E9:
	.byte	$4F,$6B,$2E,$00
L00D4:
	.byte	$77,$62,$00
L00AE:
	.byte	$72,$62,$00

.segment	"BSS"

_buffer:
	.res	26000,$00

; ---------------------------------------------------------------
; unsigned int __near__ uncompress_buffer (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uncompress_buffer: near

	.dbg	func, "uncompress_buffer", "00", extern, "_uncompress_buffer"
	.dbg	sym, "complen", "00", auto, 0
	.dbg	sym, "ptr", "00", auto, -2
	.dbg	sym, "crc", "00", auto, -6
	.dbg	sym, "unclen", "00", auto, -10
	.dbg	sym, "ptr2", "00", auto, -12
	.dbg	sym, "unclen2", "00", auto, -14

.segment	"CODE"

;
; {
;
	.dbg	line, "gunzip65.c", 101
	jsr     pushax
;
; if (buffer[0] != 0x1f || buffer[1] != 0x8b) {
;
	.dbg	line, "gunzip65.c", 109
	ldy     #$0E
	jsr     subysp
	lda     _buffer
	cmp     #$1F
	bne     L00ED
	lda     _buffer+1
	cmp     #$8B
	beq     L00EE
;
; puts("Not GZIP format");
;
	.dbg	line, "gunzip65.c", 110
L00ED:	lda     #<(L0009)
	ldx     #>(L0009)
	jsr     _puts
;
; return 0;
;
	.dbg	line, "gunzip65.c", 111
	ldx     #$00
	txa
	jmp     L0002
;
; if (buffer[2] != 8) {
;
	.dbg	line, "gunzip65.c", 115
L00EE:	lda     _buffer+2
	cmp     #$08
	beq     L000C
;
; puts("Unsupported compression method");
;
	.dbg	line, "gunzip65.c", 116
	lda     #<(L0010)
	ldx     #>(L0010)
	jsr     _puts
;
; return 0;
;
	.dbg	line, "gunzip65.c", 117
	ldx     #$00
	txa
	jmp     L0002
;
; crc = GET_LONG(buffer + complen - 8);
;
	.dbg	line, "gunzip65.c", 121
L000C:	ldy     #$0F
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #<(_buffer)
	tay
	txa
	adc     #>(_buffer)
	tax
	tya
	sec
	sbc     #$08
	bcs     L0018
	dex
L0018:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #<(_buffer)
	tay
	txa
	adc     #>(_buffer)
	tax
	tya
	sec
	sbc     #$08
	bcs     L001B
	dex
L001B:	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	lda     #$00
	jsr     tosaddax
	jsr     pushax
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #<(_buffer)
	tay
	txa
	adc     #>(_buffer)
	tax
	tya
	sec
	sbc     #$08
	bcs     L0020
	dex
L0020:	ldy     #$02
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$13
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #<(_buffer)
	tay
	txa
	adc     #>(_buffer)
	tax
	tya
	sec
	sbc     #$08
	bcs     L0024
	dex
L0024:	clc
	adc     #$02
	bcc     L0025
	inx
L0025:	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	lda     #$00
	jsr     tosaddax
	ldy     #$00
	stx     sreg+1
	sta     sreg
	tya
	tax
	jsr     tosulong
	jsr     tosaddeax
	ldy     #$08
	jsr     steaxysp
;
; unclen = GET_LONG(buffer + complen - 4);
;
	.dbg	line, "gunzip65.c", 124
	ldy     #$0F
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #<(_buffer)
	tay
	txa
	adc     #>(_buffer)
	tax
	tya
	sec
	sbc     #$04
	bcs     L002C
	dex
L002C:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #<(_buffer)
	tay
	txa
	adc     #>(_buffer)
	tax
	tya
	sec
	sbc     #$04
	bcs     L002F
	dex
L002F:	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	lda     #$00
	jsr     tosaddax
	jsr     pushax
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #<(_buffer)
	tay
	txa
	adc     #>(_buffer)
	tax
	tya
	sec
	sbc     #$04
	bcs     L0034
	dex
L0034:	ldy     #$02
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	jsr     pusha0
	ldy     #$13
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #<(_buffer)
	tay
	txa
	adc     #>(_buffer)
	tax
	tya
	sec
	sbc     #$04
	bcs     L0038
	dex
L0038:	clc
	adc     #$02
	bcc     L0039
	inx
L0039:	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	lda     #$00
	jsr     tosaddax
	ldy     #$00
	stx     sreg+1
	sta     sreg
	tya
	tax
	jsr     tosulong
	jsr     tosaddeax
	ldy     #$04
	jsr     steaxysp
;
; if (unclen > sizeof(buffer)) {
;
	.dbg	line, "gunzip65.c", 125
	ldy     #$07
	jsr     ldeaxysp
	cmp     #$91
	txa
	sbc     #$65
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcc     L003B
;
; puts("Uncompressed size too big");
;
	.dbg	line, "gunzip65.c", 126
	lda     #<(L003F)
	ldx     #>(L003F)
	jsr     _puts
;
; return 0;
;
	.dbg	line, "gunzip65.c", 127
	ldx     #$00
	txa
	jmp     L0002
;
; ptr = buffer + 10;
;
	.dbg	line, "gunzip65.c", 131
L003B:	lda     #<(_buffer+10)
	ldx     #>(_buffer+10)
	ldy     #$0C
	jsr     staxysp
;
; if (buffer[3] & FEXTRA)
;
	.dbg	line, "gunzip65.c", 132
	lda     _buffer+3
	and     #$04
	beq     L00EF
;
; ptr = buffer + 12 + GET_WORD(buffer + 10);
;
	.dbg	line, "gunzip65.c", 133
	ldx     _buffer+11
	lda     #$00
	clc
	adc     _buffer+10
	bcc     L00F4
	inx
	clc
L00F4:	adc     #<(_buffer+12)
	tay
	txa
	adc     #>(_buffer+12)
	tax
	tya
	ldy     #$0C
	jsr     staxysp
;
; if (buffer[3] & FNAME)
;
	.dbg	line, "gunzip65.c", 134
L00EF:	lda     _buffer+3
	and     #$08
	beq     L00F0
;
; while (*ptr++ != 0);
;
	.dbg	line, "gunzip65.c", 135
L0051:	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L0055
	inx
L0055:	jsr     staxysp
	ldy     #$00
	lda     (regsave),y
	bne     L0051
;
; if (buffer[3] & FCOMMENT)
;
	.dbg	line, "gunzip65.c", 136
L00F0:	lda     _buffer+3
	and     #$10
	beq     L00F1
;
; while (*ptr++ != 0);
;
	.dbg	line, "gunzip65.c", 137
L0059:	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     regsave
	stx     regsave+1
	clc
	adc     #$01
	bcc     L005D
	inx
L005D:	jsr     staxysp
	ldy     #$00
	lda     (regsave),y
	bne     L0059
;
; if (buffer[3] & FHCRC)
;
	.dbg	line, "gunzip65.c", 138
L00F1:	lda     _buffer+3
	and     #$02
	beq     L005E
;
; ptr += 2;
;
	.dbg	line, "gunzip65.c", 139
	ldy     #$0C
	clc
	lda     #$02
	adc     (sp),y
	sta     (sp),y
	iny
	lda     #$00
	adc     (sp),y
	sta     (sp),y
;
; complen -= (ptr - buffer) + 8;
;
	.dbg	line, "gunzip65.c", 145
L005E:	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #<(_buffer)
	pha
	txa
	sbc     #>(_buffer)
	tax
	pla
	clc
	adc     #$08
	bcc     L0066
	inx
L0066:	ldy     #$0E
	jsr     subeqysp
;
; ptr2 = buffer + sizeof(buffer) - complen;
;
	.dbg	line, "gunzip65.c", 155
	lda     #<(_buffer+26000)
	sec
	ldy     #$0E
	sbc     (sp),y
	pha
	lda     #>(_buffer+26000)
	iny
	sbc     (sp),y
	tax
	pla
	ldy     #$02
	jsr     staxysp
;
; memmove(ptr2, ptr, complen);
;
	.dbg	line, "gunzip65.c", 157
	jsr     decsp4
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$13
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _memmove
;
; puts("Inflating...");
;
	.dbg	line, "gunzip65.c", 160
	lda     #<(L006F)
	ldx     #>(L006F)
	jsr     _puts
;
; unclen2 = inflatemem(buffer, ptr2);
;
	.dbg	line, "gunzip65.c", 161
	lda     #<(_buffer)
	ldx     #>(_buffer)
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _inflatemem
	jsr     stax0sp
;
; if (unclen2 != (unsigned) unclen) {
;
	.dbg	line, "gunzip65.c", 164
	ldy     #$04
	cmp     (sp),y
	bne     L00F3
	txa
	iny
	cmp     (sp),y
	beq     L0075
;
; puts("Uncompressed size does not match");
;
	.dbg	line, "gunzip65.c", 165
L00F3:	lda     #<(L0078)
	ldx     #>(L0078)
	jsr     _puts
;
; return 0;
;
	.dbg	line, "gunzip65.c", 166
	ldx     #$00
	txa
	jmp     L0002
;
; puts("Calculating CRC...");
;
	.dbg	line, "gunzip65.c", 170
L0075:	lda     #<(L007C)
	ldx     #>(L007C)
	jsr     _puts
;
; if (crc32(crc32(0L, Z_NULL, 0), buffer, unclen2) != crc) {
;
	.dbg	line, "gunzip65.c", 171
	ldy     #$0C
	jsr     subysp
	ldx     #$00
	ldy     #$02
	txa
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	tay
	sta     (sp),y
	iny
	sta     (sp),y
	jsr     _crc32
	ldy     #$02
	jsr     steaxysp
	lda     #<(_buffer)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(_buffer)
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _crc32
	jsr     pusheax
	ldy     #$0F
	jsr     ldeaxysp
	jsr     tosneeax
	beq     L007E
;
; puts("CRC mismatch");
;
	.dbg	line, "gunzip65.c", 172
	lda     #<(L0087)
	ldx     #>(L0087)
	jsr     _puts
;
; return 0;
;
	.dbg	line, "gunzip65.c", 173
	ldx     #$00
	txa
	jmp     L0002
;
; return unclen2;
;
	.dbg	line, "gunzip65.c", 177
L007E:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
;
; }
;
	.dbg	line, "gunzip65.c", 178
L0002:	ldy     #$10
	jmp     addysp
	.dbg	line

.endproc

; ---------------------------------------------------------------
; __near__ unsigned char * __near__ get_fname (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_get_fname: near

	.dbg	func, "get_fname", "00", extern, "_get_fname"
	.dbg	sym, "len", "00", auto, -2

.segment	"BSS"

L008D:
	.res	100,$00

.segment	"CODE"

;
; fgets(filename, sizeof(filename), stdin);
;
	.dbg	line, "gunzip65.c", 187
	jsr     decsp6
	lda     #<(L008D)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #>(L008D)
	sta     (sp),y
	lda     #$64
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     _stdin
	ldx     _stdin+1
	jsr     _fgets
;
; len = strlen(filename);
;
	.dbg	line, "gunzip65.c", 188
	ldy     #$FF
L0096:	iny
	ldx     L008D,y
	bne     L0096
	tya
	jsr     stax0sp
;
; if (len >= 1 && filename[len - 1] == '\n')
;
	.dbg	line, "gunzip65.c", 189
	cmp     #$00
	beq     L0097
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #$01
	bcs     L009C
	dex
L009C:	sta     ptr1
	txa
	clc
	adc     #>(L008D)
	sta     ptr1+1
	ldy     #<(L008D)
	lda     (ptr1),y
	cmp     #$9B
	bne     L0097
;
; filename[len - 1] = '\0';
;
	.dbg	line, "gunzip65.c", 190
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #$01
	bcs     L00A0
	dex
L00A0:	clc
	adc     #<(L008D)
	sta     ptr1
	txa
	adc     #>(L008D)
	sta     ptr1+1
	tya
	sta     (ptr1),y
;
; return filename;
;
	.dbg	line, "gunzip65.c", 191
L0097:	lda     #<(L008D)
	ldx     #>(L008D)
;
; }
;
	.dbg	line, "gunzip65.c", 192
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"
	.dbg	sym, "fp", "00", auto, -2
	.dbg	sym, "length", "00", auto, -4

.segment	"CODE"

;
; if (doesclrscrafterexit()) {
;
	.dbg	line, "gunzip65.c", 201
	jsr     decsp4
	jsr     _doesclrscrafterexit
	tax
	beq     L00A4
;
; atexit((void (*)) getchar);
;
	.dbg	line, "gunzip65.c", 202
	lda     #<(_getchar)
	ldx     #>(_getchar)
	jsr     _atexit
;
; puts("GZIP file name:");
;
	.dbg	line, "gunzip65.c", 207
L00A4:	lda     #<(L00A9)
	ldx     #>(L00A9)
	jsr     _puts
;
; fp = fopen(get_fname(), "rb");
;
	.dbg	line, "gunzip65.c", 208
	jsr     _get_fname
	jsr     pushax
	lda     #<(L00AE)
	ldx     #>(L00AE)
	jsr     _fopen
	ldy     #$02
	jsr     staxysp
;
; if (!fp) {
;
	.dbg	line, "gunzip65.c", 209
	ldy     #$03
	lda     (sp),y
	dey
	ora     (sp),y
	bne     L00B0
;
; puts("Can't open GZIP file");
;
	.dbg	line, "gunzip65.c", 210
	lda     #<(L00B3)
	ldx     #>(L00B3)
	jsr     _puts
;
; return 1;
;
	.dbg	line, "gunzip65.c", 211
	ldx     #$00
	lda     #$01
	jmp     incsp4
;
; length = fread(buffer, 1, sizeof(buffer), fp);
;
	.dbg	line, "gunzip65.c", 213
L00B0:	jsr     decsp6
	lda     #<(_buffer)
	ldy     #$04
	sta     (sp),y
	iny
	lda     #>(_buffer)
	sta     (sp),y
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     #$90
	ldy     #$00
	sta     (sp),y
	iny
	lda     #$65
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _fread
	jsr     stax0sp
;
; fclose(fp);
;
	.dbg	line, "gunzip65.c", 214
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _fclose
;
; if (length == sizeof(buffer)) {
;
	.dbg	line, "gunzip65.c", 215
	ldy     #$01
	lda     (sp),y
	cmp     #$65
	bne     L00FA
	dey
	lda     (sp),y
	cmp     #$90
	bne     L00BF
;
; puts("File is too long");
;
	.dbg	line, "gunzip65.c", 216
	lda     #<(L00C4)
	ldx     #>(L00C4)
	jsr     _puts
;
; return 1;
;
	.dbg	line, "gunzip65.c", 217
	ldx     #$00
	lda     #$01
	jmp     incsp4
;
; length = uncompress_buffer(length);
;
	.dbg	line, "gunzip65.c", 221
L00BF:	iny
L00FA:	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _uncompress_buffer
	jsr     stax0sp
;
; if (length == 0)
;
	.dbg	line, "gunzip65.c", 222
	cpx     #$00
	bne     L00CA
	cmp     #$00
	bne     L00CA
;
; return 1;
;
	.dbg	line, "gunzip65.c", 223
	lda     #$01
	jmp     incsp4
;
; puts("Uncompressed file name:");
;
	.dbg	line, "gunzip65.c", 226
L00CA:	lda     #<(L00CF)
	ldx     #>(L00CF)
	jsr     _puts
;
; fp = fopen(get_fname(), "wb");
;
	.dbg	line, "gunzip65.c", 227
	jsr     _get_fname
	jsr     pushax
	lda     #<(L00D4)
	ldx     #>(L00D4)
	jsr     _fopen
	ldy     #$02
	jsr     staxysp
;
; if (!fp) {
;
	.dbg	line, "gunzip65.c", 228
	ldy     #$03
	lda     (sp),y
	dey
	ora     (sp),y
	bne     L00D6
;
; puts("Can't create output file");
;
	.dbg	line, "gunzip65.c", 229
	lda     #<(L00D9)
	ldx     #>(L00D9)
	jsr     _puts
;
; return 1;
;
	.dbg	line, "gunzip65.c", 230
	ldx     #$00
	lda     #$01
	jmp     incsp4
;
; if (fwrite(buffer, 1, length, fp) != length) {
;
	.dbg	line, "gunzip65.c", 232
L00D6:	jsr     decsp6
	lda     #<(_buffer)
	ldy     #$04
	sta     (sp),y
	iny
	lda     #>(_buffer)
	sta     (sp),y
	lda     #$01
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _fwrite
	ldy     #$00
	cmp     (sp),y
	bne     L00F9
	txa
	iny
	cmp     (sp),y
	beq     L00DC
;
; puts("Error while writing output file");
;
	.dbg	line, "gunzip65.c", 233
L00F9:	lda     #<(L00E3)
	ldx     #>(L00E3)
	jsr     _puts
;
; return 1;
;
	.dbg	line, "gunzip65.c", 234
	ldx     #$00
	lda     #$01
	jmp     incsp4
;
; fclose(fp);
;
	.dbg	line, "gunzip65.c", 236
L00DC:	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _fclose
;
; puts("Ok.");
;
	.dbg	line, "gunzip65.c", 238
	lda     #<(L00E9)
	ldx     #>(L00E9)
	jsr     _puts
;
; return 0;
;
	.dbg	line, "gunzip65.c", 239
	ldx     #$00
	txa
;
; }
;
	.dbg	line, "gunzip65.c", 240
	jmp     incsp4
	.dbg	line

.endproc

