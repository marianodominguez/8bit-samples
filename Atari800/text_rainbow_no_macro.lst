mads 1.9.9
     1 				    opt l+h+f-
     2
     3 				; WUDSN IDE Atari Rainbow Example, add labels
     4 				;SDMCTL = $022F ;Disable screen DMA
     5 				;VCOUNT = $D40B
     6 				;WSYNC  = $D40A
     7 				;COLOR1 = $D017
     8 				;COLOR2 = $D018
     9 				;COLOR3 = $D019
    10 				;COLOR4 = $D01A
    11 				;RTCLOK = $14
    12
    13 				;SAVMSC 	=	$58
    14 = 0064			MAXLEN 	  =	100
    15
    16 				;text offset
    17 = 00D0			offset    = $D0
    18
    19 				    org $4000 ;Start of code
    20 					icl "SystemEquates.asm"
     1 				;
     2 				; ATARI 800 SYSTEM EQUATE LISTING
     3 				;
     4 				; Tranferred to ATASM format by JAC! on 2010-11-11 based on
     5 				; http://evilbill.org/old/orig/Atari/8-Bit/Refman/appendixB.html
     6 				; Formatted using tabs for a tab width of 8 characters.
     7 				; Last update on 2010-11-11.
     8 				; The latest version of this file is availble on
     9 				; http://www.wudsn.com/productions/atari800/ide/SystemEquates.asm
    10 				;
    11 				; This listing is based on the original release of Operating System,
    12 				; version A. The vectors shown here were not changed in version B.
    13 				; New equates for XL and XE models are included and noted. 
    14 				; Changes from version B to XL/XE are also noted.
    15 				;
    16 				; Most of the equate names given below are the official Atari names.
    17 				; They are in common use but are not mandatory.
    18
    19 				;
    20 				;
    21 				;	DEVICE NAMES
    22 				;
    23 				;
    24 				;SCREDT = "E"	;SCREEN EDITOR
    25 				;KBD    = "K"	;KEYBOARD
    26 				;DISPLY = "S"	;DISPLAY
    27 				;PRINTR = "P"	;PRINTER
    28 				;CASSET = "C"	;CASSETTE
    29 				;DISK   = "D"	;DISK DRIVE
    30
    31 				;
    32 				;
    33 				;	STATUS CODES
    34 				;
    35 				;
    36 = 0001			SUCCES = $01	;  1
    37 = 0080			BRKABT = $80	;128 BREAK KEY ABORT
    38 = 0082			PRVOPN = $82	;130 IOCB ALREADY OPEN
    39 = 0082			NONDEV = $82	;130 NONEXISTANT DEVICE
    40 = 0083			WRONLY = $83	;131 OPENED FOR WRITE ONLY
    41 = 0084			NVALID = $84	;132 INVALID COMMAND
    42 = 0085			NOTOPN = $85	;133 DEVICE OR FILE NOT OPEN
    43 = 0086			BADIOC = $86	;134 INVALID IOCB NUMBER
    44 = 0087			RDONLY = $87	;135 OPENED FOR READ ONLY
    45 = 0088			EOFERR = $88	;136 END OF FILE
    46 = 0089			TRNRCD = $89	;137 TRUNCATED RECORD
    47 = 008A			TIMOUT = $8A	;138 PERIPHERAL TIME OUT
    48 = 008B			DNACK  = $8B	;139 DEVICE DOES NOT ACKNOWLEDGE
    49 = 008C			FRMERR = $8C	;140 SERIAL BUS FRAMING ERROR
    50 = 008D			CRSROR = $8D	;141 CURSOR OUT OF RANGE
    51 = 008E			OVRRUN = $8E	;142 SERIAL BUS DATA OVERRUN
    52 = 008F			CHKERR = $8F	;143 SERIAL BUS CHECKSUM ERROR
    53 = 0090			DERROR = $90	;144 PERIPHERAL DEVICE ERROR
    54 = 0091			BADMOD = $91	;145 NON EXISTANT SCREEN MODE
    55 = 0092			FNCNOT = $92	;146 FUNCTION NOT IMPLEMENTED
    56 = 0093			SCRMEM = $93	;147 NOT ENOUGH MEMORY FOR SCREEN MODE
    57
    58 				;
    59 				;
    60 				;
    61 				;	COMMAND CODES FOR CIO
    62 				;
    63 				;
    64 = 0003			OPEN   = $03	;  3
    65 = 0004			OPREAD = $04	;  4 OPEN FOR INPUT
    66 = 0005			GETREC = $05	;  5 GET RECORD
    67 = 0006			OPDIR  = $06	;  6 OPEN TO DISK DIRECTORY
    68 = 0007			GETCHR = $07	;  7 GET BYTE
    69 = 0008			OWRITE = $08	;  8 OPEN FOR OUTPUT
    70 = 0009			PUTREC = $09	;  9 WRITE RECORD
    71 = 0009			APPEND = $09	;  9 OPEN TO APPEND TO END OF DISK FILE
    72 = 0010			MXDMOD = $10	; 16 OPEN TO SPLIT SCREEN (MIXED MODE)
    73 = 000B			PUTCHR = $0B	; 11 PUT-BYTE
    74 = 000C			CLOSE  = $0C	; 12
    75 = 000C			OUPDAT = $0C	; 12 OPEN FOR INPUT AND OUTPUT AT THE SAME TIME
    76 = 000D			CSTATUS = $0D	; 13
    77 = 000E			SPECIL = $0E	; 14 BEGINNING OF SPECIAL COMMANDS
    78 = 0011			DRAWLN = $11	; 17 SCREEN DRAW
    79 = 0012			FILLIN = $12	; 18 SCREEN FILL
    80 = 0020			RENAME = $20	; 32
    81 = 0020			INSCLR = $20	; 32 OPEN TO SCREEN BUT DON'T ERASE
    82 = 0021			DELETE = $21	; 33
    83 = 0021			DFRMAT = $21	; 33 FORMAT DISK (RESIDENT DISK HANDLER (RDH))
    84 = 0023			LOCK   = $23	; 35
    85 = 0024			UNLOCK = $24	; 36
    86 = 0025			POINT  = $25	; 37
    87 = 0026			NOTE   = $26	; 38
    88 = 0050			PTSECT = $50	; 80 RDH PUT SECTOR
    89 = 0052			GTSECT = $52	; 82 RDH GET SECTOR
    90 = 0053			DHSTAT  = $53	; 83 RDH GET STATUS
    91 = 0057			PSECTV = $57	; 87 RDH PUT SECTOR AND VERIFY
    92 = 0080			NOIRG  = $80	;128 NO GAP CASSETTE MODE
    93 = 009B			CR     = $9B	;155 CARRIAGE RETURN (EOL)
    94 				;
    95 = 0010			IOCBSZ = $10	; 16 IOCB SIZE
    96 = 0080			MAXIOC = $80	;128 MAX IOCB BLOCK SIZE
    97 = 00FF			IOCBF  = $FF	;255 IOCB FREE
    98 				;
    99 = 0002			LEDGE  = $02	;  2 DEFAULT LEFT MARGIN
   100 = 0027			REDGE  = $27	; 39 DEFAULT RIGHT MARGIN
   101 				;
   102 				;	OS VARIABLES
   103 				;
   104 				;	PAGE 0
   105 				;
   106 = 0000			LINZBS = $00	;  0 (800) FOR ORIGINAL DEBUGGER
   107 				;	 $00	;  0 (XL) RESERVED
   108 = 0001			NGFLAG = $01	;  1 (XL) FOR POWER-UP SELF TEST
   109 = 0002			CASINI = $02	;  2
   110 = 0004			RAMLO  = $04	;  4 POINTER FOR SELF TEST
   111 = 0006			TRAMSZ = $06	;  6 TEMPORARY RAM SIZE
   112 = 0007			TSTDAT = $07	;  7 TEST DATA
   113 = 0008			WARMST = $08	;  8
   114 = 0009			BOOT?  = $09	;  9 SUCCESSFUL BOOT FLAG
   115 = 000A			DOSVEC = $0A	; 10 PROGRAM RUN VECTOR
   116 = 000C			DOSINI = $0C	; 12 PROGRAM INITIALIZATION
   117 = 000E			APPMHI = $0E	; 14 DISPLAY LOW LIMIT
   118 = 0010			POKMSK = $10	; 16 IRQ ENABLE FLAGS
   119 = 0011			BRKKEY = $11	; 17 FLAG
   120 				;RTCLOK = $12	; 18 3 BYTES, MSB FIRST
   121 = 0014			RTCLOK = $14
   122 = 0015			BUFADR = $15	; 21 INDIRECT BUFFER ADDRESS
   123 = 0017			ICCOMT = $17	; 23 COMMAND FOR VECTOR
   124 = 0018			DSKFMS = $18	; 24 DISK FILE MANAGER POINTER
   125 = 001A			DSKUTL = $1A	; 26 DISK UTILITY POINTER (DUP.SYS)
   126 = 001C			DTIMOT = $1C	; 28 (800) PRINTER TIME OUT REGISTER
   127 = 001C			ABUFPT = $1C	; 28 (XL) RESERVED
   128 = 001D			PBPNT  = $1D	; 29 (800) PRINTER BUFFER POINTER
   129 				;	 $1D	; 29 (XL) RESERVED
   130 = 001E			PBUFSZ = $1E	; 30 (800) PRINTER BUFFER SIZE
   131 				;	 $1E	; 30 (XL) RESERVED
   132 = 001F			PTEMP  = $1F	; 31 (800) TEMPORARY REGISTER
   133 				;	 $1F	; 31 (XL) RESERVED
   134 = 0020			ZIOCB  = $20	; 32 ZERO PAGE IOCB
   135 = 0020			ICHIDZ = $20	; 32 HANDLER INDEX NUMBER (ID)
   136 = 0021			ICDNOZ = $21	; 33 DEVICE NUMBER
   137 = 0022			ICCOMZ = $22	; 34 COMMAND
   138 = 0023			ICSTAZ = $23	; 35 STATUS
   139 = 0024			ICBALZ = $24	; 36 BUFFER POINTER LOW BYTE
   140 = 0025			ICBAHZ = $25	; 37 BUFFER POINTER HIGH BYTE
   141 = 0026			ICPTLZ = $26	; 38 PUT ROUTINE POINTER LOW
   142 = 0027			ICPTHZ = $27	; 39 PUT ROUTINE POINTER HIGH
   143 = 0028			ICBLLZ = $28	; 40 BUFFER LENGTH LOW
   144 = 0029			ICBLHZ = $29	; 41
   145 = 002A			ICAX1Z = $2A	; 42 AUXILIARY INFORMATION BYTE 1
   146 = 002B			ICAX2Z = $2B	; 43
   147 = 002C			ICSPRZ = $2C	; 44 TWO SPARE BYTES (CIO USE)
   148 = 002E			ICIDNO = $2E	; 46 IOCB NUMBER X 16
   149 = 002F			CIOCHR = $2F	; 47 CHARACTER BYTE FOR CURRENT OPERATION
   150 				;
   151 = 0030			STATUS = $30	; 48 STATUS STORAGE
   152 = 0031			CHKSUM = $31	; 49 SUM WITH CARRY ADDED BACK
   153 = 0032			BUFRLO = $32	; 50 DATA BUFFER LOW BYTE
   154 = 0033			BUFRHI = $33	; 51
   155 = 0034			BFENLO = $34	; 52 ADDRESS OF LAST BUFFER BYTE +1 (LOW)
   156 = 0035			BFENHI = $35	; 53
   157 = 0036			CBRETRY = $36	; 54 (800) NUMBER OF COMMAND FRAME RETRIES
   158 = 0036			LTEMP  = $36	; 54 (XL) LOADER TEMPORARY STORAGE, 2 BYTES
   159 = 0037			DRETRY = $37	; 55 (800) DEVICE RETRIES
   160 = 0038			BUFRFL = $38	; 56 BUFFER FULL FLAG
   161 = 0039			RECVDN = $39	; 57 RECEIVE DONE FLAG
   162 = 003A			XMTDON = $3A	; 58 TRANSMISSION DONE FLAG
   163 = 003B			CHKSNT = $3B	; 59 CHECKSUM-SENT FLAG
   164 = 003C			NOCKSM = $3C	; 60 CHECKSUM-DOES-NOT-FOLLOW-DATA FLAG
   165 = 003D			BPTR   = $3D	; 61
   166 = 003E			FTYPE  = $3E	; 62
   167 = 003F			FEOF   = $3F	; 63
   168 = 0040			FREQ   = $40	; 64
   169 				;
   170 = 0041			SOUNDR = $41	; 65 0=QUIET I/O
   171 = 0042			CRITIC = $42	; 66 CRITICAL FUNCTION FLAG, NO DEFFERED VBI
   172 = 0043			FMSZPG = $43	; 67 DOS ZERO PAGE, 7 BYTES
   173 = 004A			CKEY   = $4A	; 74 (800) START KEY FLAG
   174 = 004A			ZCHAIN = $4A	; 74 (XL) HANDLER LOADER TEMP, 2 BYTES
   175 = 004B			CASSBT = $4B	; 75 (800) CASSETTE BOOT FLAG
   176 = 004C			DSTAT  = $4C	; 76 DISPLAY STATUS
   177 				;
   178 = 004D			ATRACT = $4D	; 77
   179 = 004E			DRKMSK = $4E	; 78 ATTRACT MASK
   180 = 004F			COLRSH = $4F	; 79 ATTRACT COLOR SHIFTER (EORed WITH GRAPHICS)
   181 				;
   182 = 0050			TMPCHR = $50	; 80
   183 = 0051			HOLD1  = $51	; 81
   184 = 0052			LMARGN = $52	; 82 SCREEN LEFT MARGIN REGISTER
   185 = 0053			RMARGN = $53	; 83 SCREEN RIGHT MARGIN
   186 = 0054			ROWCRS = $54	; 84 CURSOR ROW
   187 = 0055			COLCRS = $55	; 85 CURSOR COLUMN, 2 BYTES
   188 = 0057			DINDEX = $57	; 87 DISPLAY MODE
   189 = 0058			SAVMSC = $58	; 88 SCREEN ADDRESS
   190 = 005A			OLDROW = $5A	; 90 CURSOR BEFORE DRAW OR FILL
   191 = 005B			OLDCOL = $5B	; 91
   192 = 005D			OLDCHR = $5D	; 93 DATA UNDER CURSOR
   193 = 005E			OLDADR = $5E	; 94 CURSOR ADDRESS
   194 = 0060			NEWROW = $60	; 96 (800) DRAWTO DESTINATION
   195 = 0060			FKDEF  = $60	; 96 (XL) FUNCTION KEY DEFINATION POINTER
   196 = 0061			NEWCOL = $61	; 97 (800) DRAWTO DESTINATION, 2 BYTES
   197 = 0062			PALNTS = $62	; 98 (XL) EUROPE/NORTH AMERICA TV FLAG
   198 = 0063			LOGCOL = $63	; 99 LOGICAL LINE COLUMN POINTER
   199 = 0066			MLTTMP = $66	;102
   200 = 0066			OPNTMP = $66	;102 TEMPORARY STORAGE FOR CHANNEL OPEN
   201 = 0068			SAVADR = $68	;104
   202 = 006A			RAMTOP = $6A	;106 START OF ROM (END OF RAM + 1), HIGH BYTE ONLY
   203
   204 = 006B			BUFCNT = $6B	;107 BUFFER COUNT
   205 = 006C			BUFSTR = $6C	;108 POINTER USED BY EDITOR
   206 = 006E			BITMSK = $6E	;110 POINTER USED BY EDITOR
   207 = 006F			SHFAMT = $6F	;111
   208 = 0070			ROWAC  = $70	;112
   209 = 0072			COLAC  = $72	;114
   210 = 0074			ENDPT  = $74	;116
   211 = 0076			DELTAR = $76	;118
   212 = 0077			DELTAC = $77	;119
   213 = 0079			ROWINC = $79	;121 (800)
   214 = 0079			KEYDEF = $79	;121 (XL) KEY DEFINATION POINTER, 2 BYTES
   215 = 007A			COLINC = $7A	;122 (800)
   216 = 007B			SWPFLG = $7B	;123 NON 0 IF TEXT AND REGULAR RAM IS SWAPPED
   217 = 007C			HOLDCH = $7C	;124 CH MOVED HERE BEFORE CTRL AND SHIFT
   218 = 007D			INSDAT = $7D	;125
   219 = 007E			COUNTR = $7E	;126
   220 				;
   221 = 0080			ZROFRE = $80	;128 FREE ZERO PAGE, 84 BYTES
   222 = 00D4			FPZRO  = $D4	;212 FLOATING POINT RAM, 43 BYTES
   223 = 00D4			FR0    = $D4	;212 FP REGISTER 0
   224 = 00DA			FRE    = $DA	;218
   225 = 00E0			FR1    = $E0	;224 FP REGISTER 1
   226 = 00E6			FR2    = $E6	;230 FP REGISTER 2
   227 = 00EC			FRX    = $EC	;236 SPARE
   228 = 00ED			EEXP   = $ED	;237 VALUE OF E
   229 = 00ED			NSIGN  = $ED	;237 SIGN OF FP NUMBER
   230 = 00EF			ESIGN  = $EF	;239 SIGN OF FP EXPONENT
   231 = 00F0			FCHFLG = $F0	;240 FIRST CHARACTER FLAG
   232 = 00F1			DIGRT  = $F1	;241 NUMBER OF DIGITS RIGHT OF DECIMAL POINT
   233 = 00F2			CIX    = $F2	;242 INPUT INDEX
   234 = 00F3			INBUFF = $F3	;243 POINTER TO ASCII FP NUMBER
   235 = 00F5			ZTEMP1 = $F5	;245
   236 = 00F7			ZTEMP4 = $F7	;247
   237 = 00F9			ZTEMP3 = $F9	;249
   238 = 00FB			DEGFLG = $FB	;251
   239 = 00FB			RADFLG = $FB	;251 0=RADIANS, 6=DEGREES
   240 = 00FC			FLPTR  = $FC	;252 POINTER TO BCD FP NUMBER
   241 = 00FE			FPTR2  = $FE	;254
   242 				;
   243 				;
   244 				;	PAGE 1
   245 				;
   246 				;	65O2 STACK
   247 				;
   248 				;
   249 				;
   250 				;
   251 				;	PAGE 2
   252 				;
   253 				;
   254 = 0200			INTABS = $0200	;512 INTERRUPT RAM
   255 = 0200			VDSLST = $0200	;512 NMI VECTOR
   256 = 0202			VPRCED = $0202	;514 PROCEED LINE IRQ VECTOR
   257 = 0204			VINTER = $0204	;516 INTERRUPT LINE IRQ VECTOR
   258 = 0206			VBREAK = $0206	;518
   259 = 0208			VKEYBD = $0208	;520
   260 = 020A			VSERIN = $020A	;522 SERIAL INPUT READY IRQ
   261 = 020C			VSEROR = $020C	;524 SERIAL OUTPUT READY IRQ
   262 = 020E			VSEROC = $020E	;526 SERIAL OUTPUT COMPLETE IRQ
   263 = 0210			VTIMR1 = $0210	;528 TIMER 1 IRQ
   264 = 0212			VTIMR2 = $0212	;530 TIMER 2 IRQ
   265 = 0214			VTIMR4 = $0214	;532 TIMER 4 IRQ
   266 = 0216			VIMIRQ = $0216	;534 IRQ VECTOR
   267 = 0218			CDTMV1 = $0218	;536 DOWN TIMER 1
   268 = 021A			CDTMV2 = $021A	;538 DOWN TIMER 2
   269 = 021C			CDTMV3 = $021C	;540 DOWN TIMER 3
   270 = 021E			CDTMV4 = $021E	;542 DOWN TIMER 4
   271 = 0220			CDTMV5 = $0220	;544 DOWN TIMER 5
   272 = 0222			VVBLKI = $0222	;546
   273 = 0224			VVBLKD = $0224	;548
   274 = 0226			CDTMA1 = $0226	;550 DOWN TIMER 1 JSR ADDRESS
   275 = 0228			CDTMA2 = $0228	;552 DOWN TIMER 2 JSR ADDRESS
   276 = 022A			CDTMF3 = $022A	;554 DOWN TIMER 3 FLAG
   277 = 022B			SRTIMR = $022B	;555 REPEAT TIMER
   278 = 022C			CDTMF4 = $022C	;556 DOWN TIMER 4 FLAG
   279 = 022D			INTEMP = $022D	;557 IAN'S TEMP
   280 = 022E			CDTMF5 = $022E	;558 DOWN TIMER FLAG 5
   281 = 022F			SDMCTL = $022F	;559 DMACTL SHADOW
   282 = 0230			SDLSTL = $0230	;560 DISPLAY LIST POINTER
   283 = 0232			SSKCTL = $0232	;562 SKCTL SHADOW
   284 				;	 $0233	;563 (800) UNLISTED
   285 = 0233			LCOUNT = $0233	;563 (XL) LOADER TEMP
   286 = 0234			LPENH  = $0234	;564 LIGHT PEN HORIZONTAL
   287 = 0235			LPENV  = $0235	;565 LIGHT PEN VERTICAL
   288 				;	 $0236	;566 2 SPARE BYTES
   289 				;	 $0238	;568 (800) SPARE, 2 BYTES
   290 = 0238			RELADR = $0238	;568 (XL) LOADER
   291 = 023A			CDEVIC = $023A	;570 DEVICE COMMAND FRAME BUFFER
   292 = 023C			CAUX1  = $023C	;572 DEVICE COMMAND AUX 1
   293 = 023D			CAUX2  = $023D	;573 DEVICE COMMAND AUX 2
   294 = 023E			TEMP   = $023E	;574 TEMPORARY STORAGE
   295 = 023F			ERRFLG = $023F	;575 DEVICE ERROR FLAG (EXCEPT TIMEOUT)
   296 = 0240			DFLAGS = $0240	;576 FLAGS FROM DISK SECTOR 1
   297 = 0241			DBSECT = $0241	;577 NUMBER OF BOOT DISK SECTORS
   298 = 0242			BOOTAD = $0242	;578 BOOT LOAD ADDRESS POINTER
   299 = 0244			COLDST = $0244	;580 COLD START FLAG, 1 = COLD START IN PROGRESS
   300 				;	 $0245	;581 (800) SPARE
   301 = 0245			RECLEN = $0245	;581 (XL) LOADER
   302 = 0246			DSKTIM = $0246	;582 (800) DISK TIME OUT REGISTER
   303 				;	;	;$0246	;582 (XL) RESERVED, 39 BYTES
   304 = 0247			LINBUF = $0247	;583 (800) CHARACTER LINE BUFFER, 40 BYTES
   305 = 026B			CHSALT = $026B	;619 (XL) CHARACTER SET POINTER
   306 = 026C			VSFLAG = $026C	;620 (XL) FINE SCROLL TEMPORARY
   307 = 026D			KEYDIS = $026D	;621 (XL) KEYBOARD DISABLE
   308 = 026E			FINE   = $026E	;622 (XL) FINE SCROLL FLAG
   309 = 026F			GPRIOR = $026F	;623 P/M PRIORITY AND GTIA MODES
   310 = 026F			GTIA   = $026F	;623
   311 = 0270			PADDL0 = $0270	;624 (XL) 3 MORE PADDLES, (800) 6 MORE PADDLES
   312 = 0278			STICK0 = $0278	;632 (XL) 1 MORE STICK, (800) 3 MORE STICKS
   313 = 027C			PTRIG0 = $027C	;636 (XL) 3 MORE PADDLE TRIGGERS, (800) 6 MORE
   314 = 0284			STRIG0 = $0284	;644 (XL) 1 MORE STICK TRIGGER, (800) 3 MORE
   315 = 0288			CSTAT  = $0288	;648 (800)
   316 = 0289			WMODE  = $0289	;649
   317 = 028A			BLIM   = $028A	;650
   318 				;	;	;$028B	;651 5 SPARE BYTES
   319 = 028E			NEWADR = $028E	;654 (XL)  LOADER RAM
   320 = 0290			TXTROW = $0290	;656
   321 = 0291			TXTCOL = $0291	;657
   322 = 0293			TINDEX = $0293	;659 TEXT INDEX
   323 = 0294			TXTMSC = $0294	;660
   324 = 0296			TXTOLD = $0296	;662 OLD ROW AND OLD COL FOR TEXT, 2 BYTES
   325 				;	;	;$0298	;664 4 SPARE BYTES
   326 = 029C			TMPX1  = $029C	;668 (800)
   327 = 029C			CRETRY = $029C	;668 (XL)  NUMBER OF COMMAND FRAME RETRIES
   328 = 029E			SUBTMP = $029E	;670
   329 = 029F			HOLD2  = $029F	;671
   330 = 02A0			DMASK  = $02A0	;672
   331 = 02A1			TMPLBT = $02A1	;673
   332 = 02A2			ESCFLG = $02A2	;674
   333 = 02A3			TABMAP = $02A3	;675 15 BYTE BIT MAP FOR TAB SETTINGS
   334 = 02B2			LOGMAP = $02B2	;690 4 BYTE LOGICAL LINE START BIT MAP
   335 = 02B6			INVFLG = $02B6	;694
   336 = 02B7			FILFLG = $02B7	;695 FILL DIRING DRAW FLAG
   337 = 02B8			TMPROW = $02B8	;696
   338 = 02B9			TMPCOL = $02B9	;697
   339 = 02BB			SCRFLG = $02BB	;699 SCROLL FLAG
   340 = 02BC			HOLD4  = $02BC	;700
   341 = 02BD			HOLD5  = $02BD	;701 (800)
   342 = 02BD			DRETR = $02BD	;701 (XL)  NUMBER OF DEVICE RETRIES
   343 = 02BE			SHFLOC = $02BE	;702
   344 = 02BF			BOTSCR = $02BF	;703 24 NORM, 4 SPLIT
   345 = 02C0			PCOLR0 = $02C0	;704 3 MORE PLAYER COLOR REGISTERS
   346 = 02C4			HCOLOR0 = $02C4	;708 4 MORE GRAPHICS COLOR REGISTERS
   347 				;	 $02C9	;713 (800) 23 SPARE BYTES
   348 = 02C9			RUNADR = $02C9	;713 (XL) LOADER VECTOR
   349 = 02CB			HIUSED = $02CB	;715 (XL) LOADER VECTOR
   350 = 02CD			ZHIUSE = $02CD	;717 (XL) LOADER VECTOR
   351 = 02CF			GBYTEA = $02CF	;719 (XL) LOADER VECTOR
   352 = 02D1			LOADAD = $02D1	;721 (XL) LOADER VECTOR
   353 = 02D3			ZLOADA = $02D3	;723 (XL) LOADER VECTOR
   354 = 02D5			DSCTLN = $02D5	;725 (XL) DISK SECTOR SIZ
   355 = 02D7			ACMISR = $02D7	;727 (XL) RESERVED
   356 = 02D9			KRPDER = $02D9	;729 (XL) KEY AUTO REPEAT DELAY
   357 = 02DA			KEYREP = $02DA	;730 (XL) KEY AUTO REPEAT RATE
   358 = 02DB			NOCLIK = $02DB	;731 (XL) KEY CLICK DISABLE
   359 = 02DC			HELPFG = $02DC	;732 (XL) HELP KEY FLAG
   360 = 02DD			DMASAV = $02DD	;733 (XL) SDMCTL (DMA) SAVE
   361 = 02DE			PBPNT1  = $02DE	;734 (XL) PRINTER BUFFER POINTER
   362 = 02DF			PBUFSZ1 = $02DF	;735 (XL) PRINTER BUFFER SIZE
   363 = 02E0			GLBABS = $02E0	;736 GLOBAL VARIABLES, 4 SPARE BYTES
   364 = 02E4			RAMSIZ = $02E4	;740 PERMANENT START OF ROM POINTER
   365 = 02E5			MEMTOP = $02E5	;741 END OF FREE RAM
   366 = 02E7			MEMLO  = $02E7	;743
   367 				;	 $02E9	;745 (800) SPARE
   368 = 02E9			HNDLOD = $02E9	;745 (XL) HANDLER LOADER FLAG
   369 = 02EA			DVSTAT = $02EA	;746 DEVICE STATUS BUFFER, 4 BYTES
   370 = 02EE			CBAUDL = $02EE	;750 CASSETTE BAUD RATE, 2 BYTES
   371 = 02F0			CRSINH = $02F0	;752 1 = INHIBIT CURSOR
   372 = 02F1			KEYDEL = $02F1	;753 KEY DELAY AND RATE
   373 = 02F2			CH1    = $02F2	;754
   374 = 02F3			CHACT  = $02F3	;755
   375 = 02F4			CHBAS  = $02F4	;756 CHARACTER SET POINTER
   376 = 02F5			NEWROWX = $02F5	;757 (XL) DRAW DESTINATION
   377 = 02F6			NEWCOLX = $02F6	;758 (XL) DRAW DESTINATION
   378 = 02F8			ROWINCX = $02F8	;760 (XL)
   379 = 02F9			COLINCX = $02F9	;761 (XL)
   380 = 02FA			CHAR   = $02FA	;762
   381 = 02FB			ATACHR = $02FB	;763 ATASCII CHARACTER FOR CIO
   382 = 02FC			CH     = $02FC	;764
   383 = 02FC			FILDAT = $02FC	;764 COLOR FOR SCREEN FILL
   384 = 02FE			DSPFLG = $02FE	;766 DISPLAY CONTROL CHARACTERS FLAG
   385 = 02FF			SSFLAG = $02FF	;767 DISPLAY START/STOP FLAFG
   386 				;
   387 				;
   388 				;	PAGE 3
   389 				;
   390 				;
   391 				;	RESIDENT DISK HANDLER/SIO INTERFACE
   392 				;
   393 = 0300			DCB    = $0300	;768 DEVICE CONTROL BLOCK
   394 = 0300			DDEVIC = $0300	;768
   395 = 0301			DUNIT  = $0301	;769
   396 = 0302			DCOMND = $0302	;770
   397 = 0303			DSKSTATS = $0303	;771
   398 = 0304			DBUFLO = $0304	;772
   399 = 0305			DBUFHI = $0305	;773
   400 = 0306			DTIMLO = $0306	;774
   401 = 0308			DBYTLO = $0308	;776
   402 = 0309			DBYTHI = $0309	;777
   403 = 030A			DAUX1  = $030A	;778
   404 = 030B			DAUX2  = $030B	;779
   405 = 030C			TIMER1 = $030C	;780 INITIAL TIMER VALUE
   406 = 030E			ADDCOR = $030E	;782 (800) ADDITION CORRECTION
   407 = 030E			JMPERS = $030E	;782 (XL) OPTION JUMPERS
   408 = 030F			CASFLG = $030F	;783 CASSETTE MODE WHEN SET
   409 = 0310			TIMER2 = $0310	;784 FINAL VALUE, TIMERS 1 & 2 DETERMINE BAUD RATE
   410 = 0312			TEMP1  = $0312	;786
   411 = 0313			TEMP2  = $0313	;787 (XL)
   412 				;TEMP2 = $0314	;788 (800)
   413 = 0314			PTIMOT = $0314	;788 (XL) PRINTER TIME OUT
   414 = 0315			TEMP3  = $0315	;789
   415 = 0316			SAVIO  = $0316	;790 SAVE SERIAL IN DATA PORT
   416 = 0317			TIMFLG = $0317	;791 TIME OUT FLAG FOR BAUD RATE CORRECTION
   417 = 0318			STACKP = $0318	;792 SIO STACK POINTER SAVE
   418 = 0319			TSTAT  = $0319	;793 TEMPORARY STATUS HOLDER
   419 = 031A			HATABS = $031A	;794 HANDLER ADDRESS TABLE, 38 BYTES
   420 = 0321			MAXDEV = $0321	;801 MAXIMUM HANDLER ADDRESS INDEX
   421 = 033D			PUPBT1 = $033D	;829 (XL) POWER-UP/RESET
   422 = 033E			PUPBT2 = $033E	;830 (XL) POWER-UP/RESET
   423 = 033F			PUPBT3 = $033F	;831 (XL) POWER-UP/RESET
   424 				;
   425 				;IOCB's
   426 				;
   427 = 0340			IOCB   = $0340	;832
   428 = 0340			ICHID  = $0340	;832
   429 = 0341			ICDNO  = $0341	;833
   430 = 0342			ICCOM  = $0342	;834
   431 = 0343			ICSTA  = $0343	;835
   432 = 0344			ICBAL  = $0344	;836
   433 = 0345			ICBAH  = $0345	;837
   434 = 0346			ICPTL  = $0346	;838
   435 = 0347			ICPTH  = $0347	;839
   436 = 0348			ICBLL  = $0348	;840
   437 = 0349			ICBLH  = $0349	;841
   438 = 034A			ICAX1  = $034A	;842
   439 = 034B			ICAX2  = $034B	;843
   440 = 034C			ICAX3  = $034C	;844
   441 = 034D			ICAX4  = $034D	;845
   442 = 034E			ICAX5  = $034E	;846
   443 = 034F			ICAX6  = $034F	;847
   444 				;		 OTHER IOCB's, 112 BYTES
   445
   446 = 03C0			PRNBUF = $03C0	;960 PRINTER BUFFER, 40 BYTES
   447 				;	 $03E8	;1000 (800) 21 SPARE BYTES
   448 = 03E8			SUPERF = $03E8	;1000 (XL) SCREEN EDITOR
   449 = 03E9			CSKEY   = $03E9	;1001 (XL) START KEY FLAG
   450 = 03EA			CSSBT = $03EA	;1002 (XL) CASSETTE BOOT FLAG
   451 = 03EB			CARTCK = $03EB	;1003 (XL) CARTRIDGE CHECKSUM
   452 = 03ED			ACMVAR = $03ED	;1005 (XL) RESERVED, 6 BYTES
   453 = 03F9			MINTLK = $03F9	;1017 (XL) RESERVED
   454 = 03FA			GINTLK = $03FA	;1018 (XL) CARTRIDGE INTERLOCK
   455 = 03FB			CHLINK = $03FB	;1019 (XL) HANDLER CHAIN, 2 BYTES
   456 = 03FD			CASBUF = $03FD	;1021 CASSETTE BUFFER, 131 BYTES TO $047F
   457 				;
   458 				;
   459 				;	PAGE 4
   460 				;
   461 				;
   462 = 0480			USAREA = $0480	;1152 128 SPARE BYTES
   463 				;
   464 				;	SEE APPENDIX C FOR PAGES 4 AND 5 USAGE
   465 				;
   466 				;
   467 				;
   468 				;
   469 				;	PAGE 5
   470 				;
   471 = 0500			PAGE5  = $0500	;1280 127 FREE BYTES
   472 				;	 $057E	;1406 129 FREE BYTES IF FLOATING POINT ROUTINES
   473 				; NOT USED
   474 				;
   475 				;FLOATING POINT NON-ZERO PAGE RAM, NEEDED ONLY IF FP IS USED
   476 				;
   477 = 057E			LBPR1  = $057E	;1406 LBUFF PREFIX 1
   478 = 05FE			LBPR2  = $05FE	;1534 LBUFF PREFIX 2
   479 = 0580			LBUFF  = $0580	;1408 LINE BUFFER
   480 = 05E0			PLYARG = $05E0	;1504 POLYNOMIAL ARGUMENTS
   481 = 05E6			FPSCR  = $05E6	;1510 PLYARG+FPREC
   482 = 05EC			FPSCR1 = $05EC	;1516 FPSCR+FPREC
   483 = 05E6			FSCR   = $05E6	;1510 =FPSCR
   484 = 05EC			FSCR1  = $05EC	;1516 =FPSCR1
   485 = 05FF			LBFEND = $05FF	;1535 END OF LBUFF
   486 				;
   487 				;
   488 				;	PAGE 6
   489 				;
   490 				;
   491 = 0600			PAGE6  = $0600	;1536 256 FREE BYTES
   492 				;
   493 				;
   494 				;	PAGE 7
   495 				;
   496 				;
   497 = 0700			BOOTRG = $0700	;1792 PROGRAM AREA
   498 				;
   499 				;
   500 				;	UPPER ADDRESSES
   501 				;
   502 				;
   503 = 8000			RITCAR = $8000	;32768 RAM IF NO CARTRIDGE
   504 = A000			LFTCAR = $A000	;40960 RAM IF NO CARTRIDGE
   505 				;C0PAGE= $C000	;49152 (800) EMPTY, 4K BYTES
   506 = C000			C0PAGE = $C000	;49152 (XL) 2K FREE RAM IF NO CARTRIDGE
   507 				;	 $C800	;51200 (XL) START OF OS ROM
   508 = CC00			CHORG2 = $CC00	;52224 (XL) INTERNATIONAL CHARACTER SET
   509 				;
   510 				;
   511 				;	HARDWARE REGISTERS
   512 				;
   513 				;
   514 				;	SEE REGISTER LIST FOR MORE INFORMATION
   515 				;
   516 				;
   517 = D000			HPOSP0 = $D000	;53248
   518 = D000			M0PF   = $D000	;53248
   519 = D008			SIZEP0 = $D008	;53256
   520 = D008			M0PL   = $D008	;53256
   521 = D00C			SIZEM  = $D00C	;53260
   522 = D00D			GRAFP0 = $D00D	;53261
   523 = D011			GRAFM  = $D011	;53265
   524 = D012			COLPM0 = $D012	;53266
   525 = D016			COLPF0 = $D016	;53270
   526
   527 = D016			COLOR0 = $D016
   528 = D017			COLOR1 = $D017
   529 = D018			COLOR2 = $D018
   530 = D019			COLOR3 = $D019
   531 = D01A			COLOR4 = $D01A
   532
   533 = D01B			PRIOR  = $D01B	;53275
   534 = D01B			GTIAR  = $D01B	;53275
   535 = D01C			VDELAY = $D01C	;53276
   536 = D01D			GRACTL = $D01D	;53277
   537 = D01E			HITCLR = $D01E	;53278
   538 = D01F			CONSOL = $D01F	;53279
   539 = D200			AUDF1  = $D200	;53760
   540 = D201			AUDC1  = $D201	;53761
   541 = D208			AUDCTL = $D208	;53768
   542 = D20A			RANDOM = $D20A	;53770
   543 = D20E			IRQEN  = $D20E	;53774
   544 = D20F			SKCTL  = $D20F	;53775
   545 = D300			PORTA  = $D300	;54016
   546 = D301			PORTB  = $D301	;54017
   547 = D302			PACTL  = $D302	;54018
   548 = D303			PBCTL  = $D303	;54019
   549 = D400			DMACLT = $D400	;54272
   550 = D402			DLISTL = $D402	;54274
   551 = D404			HSCROL = $D404	;54276
   552 = D405			VSCROL = $D405	;54277
   553 = D409			CHBASE = $D409	;54281
   554 = D40A			WSYNC  = $D40A	;54282
   555 = D40B			VCOUNT = $D40B	;54283
   556 = D40E			NMIEN  = $D40E	;54286
   557
   558 				;
   559 				;
   560 				;	FLOATING POINT MATH ROUTINES
   561 				;
   562 				;
   563
   564 = D800			AFP    = $D800	;55296
   565 = D8E6			FASC   = $D8E6	;55526
   566 = D9AA			IFP    = $D9AA	;55722
   567 = D9D2			FPI    = $D9D2	;55762
   568 = DA44			ZFR0   = $DA44	;55876
   569 = DA46			ZF1    = $DA46	;55878
   570 = DA60			FSUB   = $DA60	;55904
   571 = DA66			FADD   = $DA66	;55910
   572 = DADB			FMUL   = $DADB	;56027
   573 = DB28			FDIV   = $DB28	;56104
   574 = DD40			PLYEVL = $DD40	;56640
   575 = DD89			FLD0R  = $DD89	;56713
   576 = DD8D			FLD0P  = $DD8D	;56717
   577 = DD98			FLD1R  = $DD98	;56728
   578 = DD9C			FLD1P  = $DD9C	;56732
   579 = DDA7			FSTOR  = $DDA7	;56743
   580 = DDAB			FSTOP  = $DDAB	;56747
   581 = DDB6			FMOVE  = $DDB6	;56758
   582 = DDC0			EXP    = $DDC0	;56768
   583 = DDCC			EXP10  = $DDCC	;56780
   584 = DECD			LOG    = $DECD	;57037
   585 = DED1			LOG10  = $DED1	;57041
   586
   587 				;
   588 				;
   589 				;	OPERATING SYSTEM
   590 				;
   591 				;
   592 				;	MODULE ORIGIN TABLE
   593 				;
   594 = E000			CHORG  = $E000	;57344 CHARACTER SET, 1K
   595 = E400			VECTBL = $E400	;58368 VECTOR TABLE
   596 = E480			VCTABL = $E480	;58496 RAM VECTOR INITIAL VALUE TABLE
   597 = E4A6			CIOORG = $E4A6	;58534 CIO HANDLER
   598 = E6D5			INTORG = $E6D5	;59093 INTERRUPT HANDLER
   599 = E944			SIOORG = $E944	;59716 SIO DRIVER
   600 = EDEA			DSKORT = $EDEA	;60906 DISK HANDLER
   601 = EE78			PRNORG = $EE78	;61048 PRINTER HANDLER
   602 = EE78			CASORG = $EE78	;61048 CASSETTE HANDLER
   603 = F0E3			MONORG = $F0E3	;61667 MONITOR/POWER UP MODULE
   604 = F3E4			KBDORG = $F3E4	;62436 KEYBOARD/DISPLAY HANDLER
   605 				;
   606 				;
   607 				;  VECTOR TABLE, CONTAINS ADDRESSES OF CIO ROUTINES IN THE
   608 				;  FOLLOWING ORDER. THE ADDRESSES IN THE TABLE ARE TRUE ADDRESSES-1
   609 				;
   610 				;  ADDRESS + 0  OPEN
   611 				;	   + 2  CLOSE
   612 				;	   + 4  GET
   613 				;	   + 6  PUT
   614 				;	   + 8  STATUS
   615 				;	   + A  SPECIAL
   616 				;	   + C  JMP TO INITIALIZATION
   617 				;	   + F  NOT USED
   618 				;
   619 				;
   620 = E400			EDITRV = $E400	;58368 EDITOR
   621 = E410			SCRENV = $E410	;58384 SCREEN
   622 = E420			KEYBDV = $E420	;58400 KEYBOARD
   623 = E430			PRINTV = $E430	;58416 PRINTER
   624 = E440			CASETV = $E440	;58432 CASSETTE
   625 				;
   626 				;	ROM VECTORS
   627 				;
   628 = E453			DSKINV = $E453	;58451
   629 = E456			CIOV   = $E456	;58454
   630 = E459			SIOV   = $E459	;58457
   631 = E45F			SYSVBV = $E45F	;58463
   632 = E460			VBIVAL = $E460	;58464 ADR AT VVBLKI
   633 = E462			XITVBV = $E462	;58466 EXIT VBI
   634 = E463			VBIXVL = $E463	;58467 ADR AT VVBLKD
   635 = E471			BLKBDV = $E471	;58481 MEMO PAD MODE
   636 = E474			WARMSV = $E474	;58484
   637 = E477			COLDSV = $E477	;58487
    21 					icl "graph_macros.asm"
     1 				; Text mode gr.0 prints a string at x,y
     2
     3 				.macro print str, x, y
     4 						lda SAVMSC
     5 						adc :x
     6 						;adc :y+80
     7 						sta offset
     8 						lda SAVMSC+1
     9 						;adc #<(:x+:y*#40)
    10 						sta offset+1
    11 						ldy #0
    12 						lda #0
    13 				loop:	
    14 						lda :str,Y
    15 						cmp #$FF
    16 						beq pexit
    17 						sta (offset),Y
    18 						iny
    19 						cpy MAXLEN
    20 						bne loop
    21 				pexit:	nop
    22 					.endm
    23 					
    24 				;use CIO to set graphics mode
    25 				.macro graphics mode
    26 				; reset gr. 0
    27 						lda :mode
    28 						pha
    29 						ldx #$60 		;screen
    30 						lda #$C 		; CLOSE
    31 						sta ICCOM,X
    32 						jsr CIOV 		;do close
    33 						ldx #$60
    34 						lda #3 			;open
    35 						sta ICCOM,X
    36 						lda #name&255
    37 						sta ICBAL,X
    38 						lda #name/256
    39 						sta ICBAH,X
    40 						pla				; get gr. mode
    41 						sta ICAX2,X
    42 						and #$10 + $20
    43 						eor #$10
    44 						ora #$0C
    45 						sta ICAX1,X
    46 						jsr CIOV
    47 				name   .BYTE "S:",$9B
    48 				.endm
    49
    50
    22
    23 				start ; reset gr. 2
    24 FFFF> 4000-408E> A9 02			LDA #2			;mode
    25 4002 48					PHA
    26 4003 A2 60				LDX #$60		;screen
    27 4005 A9 0C				LDA #$C			; CLOSE
    28 4007 9D 42 03				STA ICCOM,X
    29 400A 20 56 E4				JSR CIOV 		;do close
    30 400D A2 60				LDX #$60
    31 400F A9 03				LDA #3 			;open
    32 4011 9D 42 03				STA ICCOM,X
    33 4014 A9 4E				LDA #string&255
    34 4016 9D 44 03				STA ICBAL,X
    35 4019 A9 40				LDA #string/256
    36 401B 9D 45 03				STA ICBAH,X
    37 401E 68					PLA
    38 401F 9D 4B 03				STA ICAX2,X
    39 4022 29 F0				AND #$F0
    40 4024 49 10				EOR #$10
    41 4026 09 0C				ORA #$C
    42 4028 9D 4A 03				STA ICAX1,X
    43 402B 20 56 E4				JSR CIOV
    44 402E				  	print string, #10, #10
Macro: PRINT [Source: graph_macros.asm]
     1 402E A5 58				lda SAVMSC
     2 4030 69 0A				adc #10
     4 4032 85 D0				sta offset
     5 4034 A5 59				lda SAVMSC+1
     7 4036 85 D1				sta offset+1
     8 4038 A0 00				ldy #0
     9 403A A9 00				lda #0
    10 403C			loop:	
    11 403C B9 4E 40				lda STRING,Y
    12 403F C9 FF				cmp #$FF
    13 4041 F0 07				beq pexit
    14 4043 91 D0				sta (offset),Y
    15 4045 C8					iny
    16 4046 C4 64				cpy MAXLEN
    17 4048 D0 F2				bne loop
    18 404A EA			pexit:	nop
Source: text_rainbow_no_macro.asm
    45 404B 4C 4B 40		pause 	jmp pause
    46
    47 404E 00 40 00 00 28 65 + string 	.byte $0,$40,"  Hello 6502 World !  ",$40,$FF
    48 4068 70 6C 65 61 73 65 +  		.byte "please terminate your strings with $FF",$FF
    49 02E0-02E1> 00 40		 		 run start ;Define run address
